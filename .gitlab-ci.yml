stages:
  - lint
  - test
  - build
  - deploy

lint_frontend:
  stage: lint
  image: node
  script:
    - cd frontend
    - npm install
    - npm run lint

lint_backend:
  stage: lint
  image: registry.gitlab.com/pipeline-components/black:latest
  script:
    - black --check --verbose -- .

playwright_tests:
  stage: test
  image: node:lts
  before_script:
    - npm install -g pnpm
    - pnpm install
    - pnpm exec playwright install --with-deps
  script:
    - pnpm exec playwright test
  artifacts:
    when: always
    paths:
      - playwright-report/
    expire_in: 30 days
  timeout: 60m

build:
  stage: build
  only:
    - main
  image: docker:latest
  services:
    - docker:dind
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  parallel:
    matrix:
      - COMPONENT: [frontend, backend]
  script:
    - docker build -t $CI_REGISTRY/sbibauw/languagelab:$COMPONENT $COMPONENT
    - docker push $CI_REGISTRY/sbibauw/languagelab:$COMPONENT

docker_deploy:
  stage: deploy
  only:
    - main
  image: alpine:latest
  script:
    - echo "/mnt/data/languagelab/repo/scripts/update.sh" > /mnt/pipeline

build-dev:
  stage: build
  only:
    - dev
  image: docker:latest
  services:
    - docker:dind
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  parallel:
    matrix:
      - COMPONENT: [frontend, backend]
  script:
    - docker build -t $CI_REGISTRY/sbibauw/languagelab:${COMPONENT}-dev $COMPONENT
    - docker push $CI_REGISTRY/sbibauw/languagelab:${COMPONENT}-dev

docker_deploy-dev:
  stage: deploy
  only:
    - dev
  image: alpine:latest
  script:
    - echo "/mnt/data/languagelab/repo/scripts/update.dev.sh" > /mnt/pipeline
